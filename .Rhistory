comp_data <- full_data
apply(comp_data[rem_NA], 2, describe)
str(comp_data)
imp_arg <- missForest(comp_data[rem_NA], verbose = TRUE, maxiter = 3, ntree = 20)
c(full_data$Street, full_data$Alley) <- as.factor(c(full_data$Street, full_data$Alley))
char_features <- select_if(is.character(full_data))
char_features <- select_if(is.character(full_data), 2)
char_cols <- c("Street", "Alley", "LotShape", "LandContour", "Utilities",
"LotConfig", "LandSlope", "Neighborhood", "Condition", "Condition",
"BldgType", "HouseStyle", "RoofStyle", "RoofMatl", "Exterior1st",
"Exterior2nd", "MasVnrType", "ExterQual", "ExterCond", "Foundation",
"BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1", "BsmtFinType2",
"Heating", "HeatingQC", "CentralAir", "Electrical", "KitchenQual", "Functional",
"FireplaceQu", "GarageType", "GarageFinish", "GarageQual", "GarageCond", "PavedDrive",
"PoolQC", "Fence", "MiscFeature", "SaleType", "SalesCondition")
full_data[, char_cols] <- lapply(full_data[, char_cols], factor)
char_cols <- c("Street", "Alley", "LotShape", "LandContour", "Utilities",
"LotConfig", "LandSlope", "Neighborhood", "Condition1", "Condition2",
"BldgType", "HouseStyle", "RoofStyle", "RoofMatl", "Exterior1st",
"Exterior2nd", "MasVnrType", "ExterQual", "ExterCond", "Foundation",
"BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1", "BsmtFinType2",
"Heating", "HeatingQC", "CentralAir", "Electrical", "KitchenQual", "Functional",
"FireplaceQu", "GarageType", "GarageFinish", "GarageQual", "GarageCond", "PavedDrive",
"PoolQC", "Fence", "MiscFeature", "SaleType", "SaleCondition")
full_data[, char_cols] <- lapply(full_data[, char_cols], factor)
str(full_data)
comp_data <- full_data
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
head(comp_data$Fence, 10)
comp_data$Fence
full_data$Fence
var_none <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "FireplaceQu", "GarageType", "GarageFinish",
"GarageQual", "GarageCond", "PoolQC", "Fence", "MiscFeature",
"BsmtFullBath", "BsmtHalfBath")
fill_none <- function(data, feature) {
levels(data[, feature]) <- c(levels(data[, feature]), "None")
data[, feature][is.na(data[, feature])] <- "None"
return(data[, feature])
}
comp_data <- full_data
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
comp_data$Fence
head(comp_data$Alley, 10)
full_data <- rbind(train_data [, -c(dim(train_data)[2] - 1, dim(train_data)[2])], test_data)
dim(full_data)
varNA <- colnames(full_data)[colSums(is.na(full_data)) > 0]
percentage_NA <- function(x) {
(sum(is.na(x))/length(x)) * 100
}
percs <- apply(full_data[varNA], 2, percentage_NA)
percs <- percs[order(-percs)]
par(las = 2)
barplot(percs, main = "percentage of NA", horiz = TRUE, cex.names = 0.5)
describe(full_data$Fence)
percs
str(full_data)
char_cols <- c("MSZoning","Street", "Alley", "LotShape", "LandContour", "Utilities",
"LotConfig", "LandSlope", "Neighborhood", "Condition1", "Condition2",
"BldgType", "HouseStyle", "RoofStyle", "RoofMatl", "Exterior1st",
"Exterior2nd", "MasVnrType", "ExterQual", "ExterCond", "Foundation",
"BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1", "BsmtFinType2",
"Heating", "HeatingQC", "CentralAir", "Electrical", "BsmtFullBath",
"BsmtHalfBath", "KitchenQual", "Functional", "FireplaceQu", "GarageType",
"GarageFinish", "GarageQual", "GarageCond", "PavedDrive",
"PoolQC", "Fence", "MiscFeature", "SaleType", "SaleCondition")
full_data[, char_cols] <- lapply(full_data[, char_cols], factor)
str(full_data)
var_none <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "FireplaceQu", "GarageType", "GarageFinish",
"GarageQual", "GarageCond", "PoolQC", "Fence", "MiscFeature",
"BsmtFullBath", "BsmtHalfBath")
fill_none <- function(data, feature) {
levels(data[, feature]) <- c(levels(data[, feature]), "None")
data[, feature][is.na(data[, feature])] <- "None"
return(data[, feature])
}
comp_data <- full_data
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
full_data <- rbind(train_data [, -c(dim(train_data)[2] - 1, dim(train_data)[2])], test_data)
dim(full_data)
varNA <- colnames(full_data)[colSums(is.na(full_data)) > 0]
percentage_NA <- function(x) {
(sum(is.na(x))/length(x)) * 100
}
percs <- apply(full_data[varNA], 2, percentage_NA)
percs <- percs[order(-percs)]
par(las = 2)
barplot(percs, main = "percentage of NA", horiz = TRUE, cex.names = 0.5)
describe(full_data$Fence)
describe(full_data$Alley)
percs
full_data$BsmtFullBath <- as.factor(full_data$BsmtFullBath)
full_data$BsmtHalfBath <- as.factor(full_data$BsmtHalfBath)
full_data[, char_cols] <- lapply(full_data[, char_cols], factor)
#full_data[, char_cols] <- lapply(full_data[, char_cols], factor)
#str(full_data)
# Replace NA with 'without' in the following features because it represents
# the absence of that amenity
comp_data$Alley
full_data <- rbind(train_data [, -c(dim(train_data)[2] - 1, dim(train_data)[2])], test_data)
dim(full_data)
varNA <- colnames(full_data)[colSums(is.na(full_data)) > 0]
percentage_NA <- function(x) {
(sum(is.na(x))/length(x)) * 100
}
percs <- apply(full_data[varNA], 2, percentage_NA)
percs <- percs[order(-percs)]
par(las = 2)
barplot(percs, main = "percentage of NA", horiz = TRUE, cex.names = 0.5)
describe(full_data$Alley)
full_data$Alley
percs
full_data$BsmtFullBath <- as.factor(full_data$BsmtFullBath)
full_data$BsmtHalfBath <- as.factor(full_data$BsmtHalfBath)
var_none <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "FireplaceQu", "GarageType", "GarageFinish",
"GarageQual", "GarageCond", "PoolQC", "Fence", "MiscFeature",
"BsmtFullBath", "BsmtHalfBath")
fill_none <- function(data, feature) {
levels(data[, feature]) <- c(levels(data[, feature]), "None")
data[, feature][is.na(data[, feature])] <- "None"
return(data[, feature])
}
comp_data <- full_data
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
fill_none <- function(data, feature) {
levels(data[, feature]) <- c(levels(data[, feature]), "None")
data[, feature][is.na(data[, feature])] <- "None"
return(data[, feature])
}
comp_data <- full_data
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
fill_none <- function(data, feature) {
levels(data[, feature]) <- c(levels(data[, feature]), "None")
data[, feature][is.na(data[, feature])] <- "None"
return(data[, feature])
}
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
str(full_data)
str(train_data)
char_cols <- select_if(train_data, is.character)
char_cols
print(char_cols)
colnames(char_cols)
num_cols <- select_if(train_data, is.numeric)
colnames(num_cols)
str(full_data)
apply(comp_data[rem_NA], 2, describe)
imp_arg <- missForest(comp_data[rem_NA], verbose = TRUE, maxiter = 3, ntree = 20)
train_data <- read_csv("train.csv")
test_data <- read_csv("test.csv")
str(train_data)
rem_comma <- gsub(",", "", train_data$SalePrice)
rem_dol <- gsub("\\$", "", rem_comma)
saleprice_as_num <- as.numeric(rem_dol)
train_data$SalePrice <- saleprice_as_num
train_data$Log_SalePrice <- log(train_data$SalePrice)
numeric_values <- select_if(train_data, is.numeric)
numeric_values
colnames(numeric_values)
corplot.names <- colnames(numeric_values[2:dim(numeric_values)[2]])
cordata <- na.omit(train_data[, (names(train_data) %in% corplot.names)])
corrplot.mixed(cor(cordata), lower = "square", upper = "circle",
tl = "lt", diag = "l", bg = "blue" )
dim(train_data)
dim(test_data)
full_data <- rbind(train_data [, -c(dim(train_data)[2] - 1, dim(train_data)[2])], test_data)
dim(full_data)
varNA <- colnames(full_data)[colSums(is.na(full_data)) > 0]
varNA
percentage_NA <- function(x) {
(sum(is.na(x))/length(x)) * 100
}
percs <- apply(full_data[varNA], 2, percentage_NA)
percs <- percs[order(-percs)]
par(las = 2)
barplot(percs, main = "percentage of NA", horiz = TRUE, cex.names = 0.5)
percs
var_none <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "FireplaceQu", "GarageType", "GarageFinish",
"GarageQual", "GarageCond", "PoolQC", "Fence", "MiscFeature",
"BsmtFullBath", "BsmtHalfBath")
fill_none <- function(data, feature) {
levels(data[, feature]) <- c(levels(data[, feature]), "None")
data[, feature][is.na(data[, feature])] <- "None"
return(data[, feature])
}
comp_data <- full_data
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
full_data$BsmtFullBath <- as.factor(full_data$BsmtFullBath)
full_data$BsmtHalfBath <- as.factor(full_data$BsmtHalfBath)
var_none <- c("Alley", "BsmtQual", "BsmtCond", "BsmtExposure", "BsmtFinType1",
"BsmtFinType2", "FireplaceQu", "GarageType", "GarageFinish",
"GarageQual", "GarageCond", "PoolQC", "Fence", "MiscFeature",
"BsmtFullBath", "BsmtHalfBath")
fill_none <- function(data, feature) {
levels(data[, feature]) <- c(levels(data[, feature]), "None")
data[, feature][is.na(data[, feature])] <- "None"
return(data[, feature])
}
comp_data <- full_data
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
str(comp_data)
for (i in 1:length(var_none)) {
comp_data[, var_none][i] <- fill_none(comp_data, var_none[i])
}
comp_data$BsmtFullBath
comp_data$BsmtHalfBath
str(comp_data)
rem_NA <- colnames(comp_data[apply(comp_data, 2, percentage_NA) > 0])
rem_NA
apply(comp_data[rem_NA], 2, describe)
str(comp_data)
imp_arg <- missForest(comp_data[rem_NA], verbose = TRUE, maxiter = 3, ntree = 20)
comp_data$MSZoning <- as.factor(comp_data$MSZoning)
imp_arg <- missForest(comp_data[rem_NA], verbose = TRUE, maxiter = 3, ntree = 20)
char_cols
colnames(char_cols)
# Comp 2
comp_data2 <- comp_data
char_cols2 <- c("MSZoning", "Street", "Alley", "LotShape",
"LandContour", "Utilities", "LotConfig", "LandSlope",
"Neighborhood", "Condition1", "Condition2", "BldgType",
"HouseStyle", "RoofStyle", "RoofMatl", "Exterior1st",
"Exterior2nd", "MasVnrType", "ExterQual", "ExterCond",
"Foundation", "BsmtQual", "BsmtCond", "BsmtExposure",
"BsmtFinType1", "BsmtFinType2", "Heating", "HeatingQC",
"CentralAir", "Electrical", "KitchenQual", "Functional",
"FireplaceQu", "GarageType", "GarageFinish", "GarageQual",
"GarageCond", "PavedDrive", "PoolQC", "Fence",
"MiscFeature", "SaleType", "SaleCondition")
comp_data2[, char_cols2] <- lapply(comp_data2[, char_cols2], factor)
str(comp_data2)
rem_NA2 <- rem_NA
imp_arg2 <- missForest(comp_data2[rem_NA2], verbose = TRUE, maxiter = 3, ntree = 20)
apply(comp_data2[rem_NA2], 2, describe)
imp_arg2 <- missForest(comp_data2[rem_NA2], verbose = TRUE, maxiter = 3, ntree = 20)
comp_data2[, num_cols] <- lapply(comp_data2[, num_cols], integer)
comp_data2[, num_cols] <- lapply(comp_data2[, num_cols], integer)
class(comp_data2)
str(comp_data2)
x = 223
class(x)
as.integer(x)
class(x)
num_x <- as.integer(x)
class(num_x)
colnames(num_cols)
char_num2 <- c("Id"          , "MSSubClass"   ,"LotFrontage"  ,"LotArea"      ,
"OverallQual" , "OverallCond"  ,"YearBuilt"    ,"YearRemodAdd" ,
"MasVnrArea"  , "BsmtFinSF1"   ,"BsmtFinSF2"   ,"BsmtUnfSF"    ,
"TotalBsmtSF",  "1stFlrSF"    , "2ndFlrSF"    , "LowQualFinSF" ,
"GrLivArea"  ,  "BsmtFullBath", "BsmtHalfBath", "FullBath"     ,
"HalfBath"   ,  "BedroomAbvGr", "KitchenAbvGr", "TotRmsAbvGrd" ,
"Fireplaces" ,  "GarageYrBlt" , "GarageCars"  , "GarageArea"   ,
"WoodDeckSF" ,  "OpenPorchSF" , "EnclosedPorch", "3SsnPorch"   ,
"ScreenPorch",  "PoolArea"    , "MiscVal"      , "MoSold"      ,
"YrSold"     ,  "SalePrice"   , "Log_SalePrice")
comp_data2[, char_num2] <- lapply(comp_data2[, char_num2], integer)
char_num2 <- c("Id"          , "MSSubClass"   ,"LotFrontage"  ,"LotArea"      ,
"OverallQual" , "OverallCond"  ,"YearBuilt"    ,"YearRemodAdd" ,
"MasVnrArea"  , "BsmtFinSF1"   ,"BsmtFinSF2"   ,"BsmtUnfSF"    ,
"TotalBsmtSF",  "1stFlrSF"    , "2ndFlrSF"    , "LowQualFinSF" ,
"GrLivArea"  ,  "BsmtFullBath", "BsmtHalfBath", "FullBath"     ,
"HalfBath"   ,  "BedroomAbvGr", "KitchenAbvGr", "TotRmsAbvGrd" ,
"Fireplaces" ,  "GarageYrBlt" , "GarageCars"  , "GarageArea"   ,
"WoodDeckSF" ,  "OpenPorchSF" , "EnclosedPorch", "3SsnPorch"   ,
"ScreenPorch",  "PoolArea"    , "MiscVal"      , "MoSold"      ,
"YrSold")
comp_data2[, char_num2] <- lapply(comp_data2[, char_num2], integer)
comp_data2[, char_num2] <- lapply(comp_data2[, char_num2], integer)
comp_data2
colnames(comp_data2)
rem_NA2
rem_NA
library(ggplot2)
library(readr)
library(dplyr)
library(Hmisc)
library(corrplot)
library(mice)
library(missForest)
library(VIM)
library(lattice)
library(caret)
library(dummy)
library(dplyr)
library(Hmisc)
library(corrplot)
library(mice)
library(missForest)
library(VIM)
library(lattice)
library(caret)
library(dummy)
train_data<-read.csv("train.csv")
test_data<- read.csv("test.csv")
str(test_data)
head(train_data$SalePrice)
train_data$log_salesprice <- log(train_data$SalePrice)
rem_comma <- gsub(",", "", train_data$SalePrice)
rem_dol <- gsub("\\$", "", rem_comma)
saleprice_as_num <- as.numeric(rem_dol)
train_data$SalePrice <- saleprice_as_num
head(train_data$SalePrice)
train_data$log_salesprice <- log(train_data$SalePrice)
#checking out the dimention and describtion of training data
dim(train_data)
numeric_values <- select_if(train_data,is.numeric)
dim(numeric_values)
corplot.names <- colnames(numeric_values[2:dim(numeric_values)[2]])
cordata <- na.omit(train_data[,(names(train_data) %in% corplot.names)])
corrplot.mixed(cor(cordata), lower = "square", upper ="circle",
tl= "lt",diag ="l",bg="blue" )
dim(train_data)
dim(test_data)
full_data <- rbind(train_data[,-c(dim(train_data)[2]-1,dim(train_data)[2])],test_data)
dim(full_data)
var_NA <- colnames(full_data)[colSums(is.na(full_data))>0]
var_NA
percentage_NA <- function(x){
(sum(is.na(x))/length(x))*100
percentage_NA <- function(x){
(sum(is.na(x))/length(x))*100
}
x = 2
x
var_NA
x
library(ggplot2) # Data visualization
library(readr)
library(dplyr)
library(Hmisc)
library(corrplot)
library(mice)
library(missForest)
library(VIM)
library(lattice)
library(caret)
library(dummy)
train_data<-read.csv("train.csv")
test_data<- read.csv("test.csv")
str(test_data)
head(train_data$SalePrice)
rem_comma <- gsub(",", "", train_data$SalePrice)
rem_dol <- gsub("\\$", "", rem_comma)
saleprice_as_num <- as.numeric(rem_dol)
train_data$SalePrice <- saleprice_as_num
train_data$log_salesprice <- log(train_data$SalePrice)
dim(train_data)
numeric_values <- select_if(train_data,is.numeric)
dim(numeric_values)
corplot.names <- colnames(numeric_values[2:dim(numeric_values)[2]])
cordata <- na.omit(train_data[,(names(train_data) %in% corplot.names)])
corrplot.mixed(cor(cordata), lower = "square", upper ="circle",
tl= "lt",diag ="l",bg="blue" )
dim(train_data)
dim(test_data)
full_data <- rbind(train_data[,-c(dim(train_data)[2]-1,dim(train_data)[2])],test_data)
dim(full_data)
var_NA <- colnames(full_data)[colSums(is.na(full_data))>0]
var_NA
percentage_NA <- function(x){
(sum(is.na(x))/length(x))*100
}
perc<- apply(full_data[var_NA],2,percentage_NA)
perc<- perc[order(-perc)]
par(las=2)
barplot(perc,main="percentage of NA", horiz=TRUE,cex.names=0.5  )
describe(full_data$Fence)
describe(full_data$Alley)
describe(full_data$PoolQC)
describe(full_data$MiscFeature)
describe(full_data$LotFrontage)
describe(full_data$GarageYrBlt)
perc
full_data$BsmtFullBath <- as.factor(full_data$BsmtFullBath)
full_data$BsmtHalfBath <- as.factor(full_data$BsmtHalfBath)
var_None <- c("Alley","BsmtQual","BsmtCond","BsmtExposure","BsmtFinType1","BsmtFinType2",
"FireplaceQu","GarageType","GarageFinish","GarageQual","GarageCond","PoolQC",
"Fence","MiscFeature","BsmtFullBath","BsmtHalfBath")
fill_None <- function(data,feature){
levels(data[,feature]) <- c(levels(data[,feature]), "None")
data[,feature][is.na(data[,feature])] <- "None"
return(data[,feature])
}
comp_data <- full_data
for(i in 1:length(var_None)){
comp_data[,var_None][i] <- fill_None(comp_data,var_None[i])
}
rem_NA<-colnames(comp_data[apply(comp_data,2,percentage_NA)>0])
rem_NA
apply(comp_data[rem_NA],2,describe)
str(comp_data)
imp.arg <- missForest(comp_data[rem_NA],verbose= TRUE, maxiter=3,ntree=20)
comp_data$MSZoning <- as.factor(comp_data$MSZoning)
imp.arg <- missForest(comp_data[rem_NA],verbose= TRUE, maxiter=3,ntree=20)
comp_data_chars <- select_if(comp_data, as.character)
comp_data_chars <- select_if(comp_data, is.character)
comp_data_chars
colnames(comp_data_chars)
comp_data$Utilities <- as.factor(comp_data$Utilities)
imp.arg <- missForest(comp_data[rem_NA],verbose= TRUE, maxiter=3,ntree=20)
comp_data$Exterior1st <- as.factor(comp_data$Exterior1st)
imp.arg <- missForest(comp_data[rem_NA],verbose= TRUE, maxiter=3,ntree=20)
comp_data$Exterior2nd <- as.factor(comp_data$Exterior2nd)
imp.arg <- missForest(comp_data[rem_NA],verbose= TRUE, maxiter=3,ntree=20)
comp_data$Exterior2nd <- as.factor(comp_data$Exterior2nd)
comp_data$MasVnrType <- as.factor(comp_data$MasVnrType)
comp_data$ExterQual <- as.factor(comp_data$ExterQual)
comp_data$ExterCond <- as.factor(comp_data$ExterCond)
comp_data$Foundation <- as.factor(comp_data$Foundation)
imp.arg <- missForest(comp_data[rem_NA],verbose= TRUE, maxiter=3,ntree=20)
comp_data$Electrical <- as.factor(comp_data$Electrical)
comp_data$BsmtQual <- as.factor(comp_data$BsmtQual)
comp_data$BsmtCond <- as.factor(comp_data$BsmtCond)
comp_data$BsmtExposure <- as.factor(comp_data$BsmtExposure)
comp_data$BsmtFinType1 <- as.factor(comp_data$BsmtFinType1)
comp_data$BsmtFinType2 <- as.factor(comp_data$BsmtFinType2)
comp_data$Heating <- as.factor(comp_data$Heating)
comp_data$HeatingQC <- as.factor(comp_data$Heating)
imp.arg <- missForest(comp_data[rem_NA],verbose= TRUE, maxiter=3,ntree=20)
comp_data$CentralAir <- as.factor(comp_data$CentralAir)
comp_data$KitchenQual <- as.factor(comp_data$KitchenQual)
comp_data$Functional <- as.factor(comp_data$Functional)
comp_data$FireplaceQu <- as.factor(comp_data$FireplaceQu)
comp_data$GarageType <- as.factor(comp_data$GarageType)
comp_data$GarageFinish <- as.factor(comp_data$GarageFinish)
comp_data$GarageQual <- as.factor(comp_data$GarageQual)
imp.arg <- missForest(comp_data[rem_NA],verbose= TRUE, maxiter=3,ntree=20)
comp_data$GarageCond <- as.factor(comp_data$GarageCond)
comp_data$PavedDrive <- as.factor(comp_data$PavedDrive)
comp_data$PoolQC <- as.factor(comp_data$PoolQC)
comp_data$Fence <- as.factor(comp_data$Fence)
comp_data$MiscFeature <- as.factor(comp_data$MiscFeature)
imp.arg <- missForest(comp_data[rem_NA],verbose= TRUE, maxiter=3,ntree=20)
describe(comp_data$SaleType)
comp_data$SaleType <- as.factor(comp_data$SaleType)
comp_data$SaleCondition <- as.factor(comp_data$SaleCondition)
imp.arg <- missForest(comp_data[rem_NA],verbose= TRUE, maxiter=3,ntree=20)
imp.arg$OOBerror
plot1 <- aggr(comp_data, col = c("Navy Blue","Red"),
numbers = TRUE, sortVars = TRUE,
labels = names(comp_data), cex.axis =0.7,
gap=2, ylab = c("Missing data Before Imputation", "Pattern"))
sum(is.na(comp_data))
imp_data <- imp.arg$ximp
for(i in 1:length(rem_NA)){
comp_data[,rem_NA][i] <- imp_data[i]
}
sum(is.na(comp_data))
plot2 <- aggr(comp_data, col =c("Navy blue", "Red"),
numbers= TRUE, sortVars = TRUE,
labels = names(comp_data),cex.axis = 0.7,
gap=2, ylab= c("Missing data AFTER imputation", "Pattern"))
cat_variables <- select_if(comp_data, is.factor)
colnames(cat_variables)
x = c('MSZoning', 'Street', 'Alley', 'LotShape', 'LandContour',
'Utilities', 'LotConfig', 'LandSlope', 'Neighborhood', 'Condition1',
'Condition2', 'BldgType', 'HouseStyle', 'RoofStyle', 'RoofMatl',
'Exterior1st', 'Exterior2nd', 'MasVnrType', 'ExterQual', 'ExterCond',
'Foundation', 'BsmtQual', 'BsmtCond', 'BsmtExposure', 'BsmtFinType1',
'BsmtFinType2', 'Heating', 'HeatingQC', 'CentralAir', 'Electrical',
'BsmtFullBath', 'BsmtHalfBath', 'KitchenQual', 'Functional',
'FireplaceQu', 'GarageType', 'GarageFinish', 'GarageQual', 'GarageCond',
'PavedDrive', 'PoolQC', 'Fence', 'MiscFeature', 'SaleType',
'SaleCondition')
colSums(x)
length(x)
new_data <- dummy.data.frame(comp_data, names= c('MSZoning','Street','Alley','LotShape','LandContour',
'Utilities','LotConfig','LandSlope','Neighborhood','Condition1','Condition2','BldgType','HouseStyle',
'RoofStyle','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','ExterQual','ExterCond','Foundation',
'BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','Heating','HeatingQC','CentralAir',
'Electrical','BsmtFullBath','BsmtHalfBath','KitchenQual','Functional','FireplaceQu','GarageType',
'GarageFinish','GarageQual','GarageCond','PavedDrive','PoolQC','Fence','MiscFeature','SaleType','SaleCondition'))
library(dummies)
install.packages("dummies")
install.packages("dummies")
install.packages("dummies", dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages("dummy")
package_url <- "http://cran.nexr.com/src/contrib/Archive/dummies/dummies_1.03.tar.gz"
install.packages(package_url, repos = NULL, type = "source")
library(dummies)
new_data <- dummy.data.frame(comp_data, names= c('MSZoning','Street','Alley','LotShape','LandContour',
'Utilities','LotConfig','LandSlope','Neighborhood','Condition1','Condition2','BldgType','HouseStyle',
'RoofStyle','RoofMatl','Exterior1st','Exterior2nd','MasVnrType','ExterQual','ExterCond','Foundation',
'BsmtQual','BsmtCond','BsmtExposure','BsmtFinType1','BsmtFinType2','Heating','HeatingQC','CentralAir',
'Electrical','BsmtFullBath','BsmtHalfBath','KitchenQual','Functional','FireplaceQu','GarageType',
'GarageFinish','GarageQual','GarageCond','PavedDrive','PoolQC','Fence','MiscFeature','SaleType','SaleCondition'))
